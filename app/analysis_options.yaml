# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

analyzer:
  # Treat warnings as errors in CI
  errors:
    missing_required_param: error
    missing_return: error
    todo: warning
    deprecated_member_use: warning

linter:
  # Production-ready strict lint rules
  rules:
    # Error prevention
    avoid_print: true  # No print statements in production
    avoid_web_libraries_in_flutter: true
    cancel_subscriptions: true
    close_sinks: true

    # Code quality
    prefer_const_constructors: true
    prefer_const_literals_to_create_immutables: true
    prefer_const_constructors_in_immutables: true
    prefer_final_fields: true
    prefer_final_locals: true
    prefer_single_quotes: true
    always_declare_return_types: true
    avoid_unused_constructor_parameters: true
    avoid_void_async: true

    # Style and consistency
    sort_constructors_first: true
    sort_unnamed_constructors_first: true
    avoid_empty_else: true
    avoid_relative_lib_imports: true

    # Security
    avoid_dynamic_calls: true

    # Async safety - CRITICAL for production
    unawaited_futures: true

    # Documentation
    public_member_api_docs: false  # Enable for public packages

# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options