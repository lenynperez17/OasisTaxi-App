# 🚖 OASIS TAXI PERÚ - GitHub Actions CI/CD
# Pipeline completo para builds, tests y deployment usando GitHub Actions

name: OasisTaxi CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Builds nocturnos a las 2 AM UTC (11 PM Lima)
    - cron: '0 2 * * *'

env:
  FLUTTER_VERSION: '3.24.4'
  JAVA_VERSION: '11'
  NODE_VERSION: '18'

jobs:
  # ═══════════════════════════════════════════════════════════════════
  # 📋 JOB 1: ANÁLISIS Y VALIDACIÓN
  # ═══════════════════════════════════════════════════════════════════
  analyze:
    name: 🔍 Análisis de Código
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
    - name: 📥 Checkout código
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: ☕ Setup Java ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        distribution: 'adopt'
        java-version: ${{ env.JAVA_VERSION }}

    - name: 📱 Setup Flutter ${{ env.FLUTTER_VERSION }}
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        cache: true

    - name: 📦 Obtener dependencias
      working-directory: app
      run: |
        flutter pub get
        flutter pub deps

    - name: 🔍 Análisis estático
      working-directory: app
      run: |
        echo "🔍 Ejecutando análisis estático de OasisTaxi..."
        flutter analyze --no-pub --fatal-infos
        
        echo "📝 Verificando formato de código..."
        dart format --output=none --set-exit-if-changed .
        
        echo "🔎 Verificando TODOs críticos..."
        if grep -r "TODO.*CRITICAL\|FIXME.*URGENT" lib/; then
          echo "❌ Se encontraron TODOs/FIXMEs críticos"
          exit 1
        fi

    - name: 📊 Subir resultados de análisis
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: analysis-results
        path: app/analysis_options.yaml

  # ═══════════════════════════════════════════════════════════════════
  # 📋 JOB 2: TESTING COMPLETO
  # ═══════════════════════════════════════════════════════════════════
  test:
    name: 🧪 Testing
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: analyze
    
    steps:
    - name: 📥 Checkout código
      uses: actions/checkout@v4

    - name: ☕ Setup Java ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        distribution: 'adopt'
        java-version: ${{ env.JAVA_VERSION }}

    - name: 📱 Setup Flutter ${{ env.FLUTTER_VERSION }}
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        cache: true

    - name: 📦 Obtener dependencias
      working-directory: app
      run: flutter pub get

    - name: 🧪 Tests unitarios
      working-directory: app
      run: |
        echo "🧪 Ejecutando tests de OasisTaxi..."
        flutter test --coverage --reporter=json > test_results.json
        
        echo "📊 Generando reporte de cobertura..."
        genhtml coverage/lcov.info -o coverage/html || true

    - name: 📈 Verificar cobertura
      working-directory: app
      run: |
        if [ -f coverage/lcov.info ]; then
          COVERAGE=$(lcov --summary coverage/lcov.info 2>&1 | grep "lines" | awk '{print $2}' | sed 's/%//' || echo "0")
          echo "📊 Cobertura de tests: $COVERAGE%"
          
          if (( $(echo "$COVERAGE < 70" | bc -l) )); then
            echo "⚠️ Cobertura baja: $COVERAGE%. Recomendado: >70%"
          else
            echo "✅ Cobertura aceptable: $COVERAGE%"
          fi
        fi

    - name: 📊 Subir resultados de tests
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          app/test_results.json
          app/coverage/
        retention-days: 30

  # ═══════════════════════════════════════════════════════════════════
  # 📋 JOB 3: BUILD ANDROID
  # ═══════════════════════════════════════════════════════════════════
  build-android:
    name: 🤖 Build Android
    runs-on: ubuntu-latest
    timeout-minutes: 45
    needs: [analyze, test]
    if: github.event_name != 'pull_request'
    
    steps:
    - name: 📥 Checkout código
      uses: actions/checkout@v4

    - name: ☕ Setup Java ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        distribution: 'adopt'
        java-version: ${{ env.JAVA_VERSION }}

    - name: 📱 Setup Flutter ${{ env.FLUTTER_VERSION }}
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        cache: true

    - name: 🔐 Configurar secretos Android
      working-directory: app
      env:
        KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
        KEY_PROPERTIES: ${{ secrets.ANDROID_KEY_PROPERTIES }}
        GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES_ANDROID }}
      run: |
        if [ ! -z "$KEYSTORE_BASE64" ]; then
          echo "🔑 Configurando keystore Android..."
          echo "$KEYSTORE_BASE64" | base64 -d > android/app/keystore.jks
          echo "$KEY_PROPERTIES" > android/key.properties
        fi
        
        if [ ! -z "$GOOGLE_SERVICES" ]; then
          echo "🔧 Configurando Google Services..."
          echo "$GOOGLE_SERVICES" > android/app/google-services.json
        fi

    - name: 📦 Obtener dependencias
      working-directory: app
      run: flutter pub get

    - name: 🤖 Build Android APK
      working-directory: app
      run: |
        echo "🤖 Building Android APK para OasisTaxi..."
        flutter build apk --release \
          --target lib/main.dart \
          --split-per-abi \
          --obfuscate \
          --split-debug-info=build/app/outputs/symbols

    - name: 📦 Build Android App Bundle
      working-directory: app
      run: |
        echo "📦 Building Android App Bundle..."
        flutter build appbundle --release \
          --target lib/main.dart \
          --obfuscate \
          --split-debug-info=build/app/outputs/symbols

    - name: 📊 Subir APKs
      uses: actions/upload-artifact@v4
      with:
        name: android-apks
        path: |
          app/build/app/outputs/flutter-apk/*.apk
          app/build/app/outputs/bundle/release/*.aab
        retention-days: 90

  # ═══════════════════════════════════════════════════════════════════
  # 📋 JOB 4: BUILD WEB
  # ═══════════════════════════════════════════════════════════════════
  build-web:
    name: 🌐 Build Web
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: [analyze, test]
    
    steps:
    - name: 📥 Checkout código
      uses: actions/checkout@v4

    - name: 📱 Setup Flutter ${{ env.FLUTTER_VERSION }}
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        cache: true

    - name: 📦 Obtener dependencias
      working-directory: app
      run: flutter pub get

    - name: 🌐 Build Web
      working-directory: app
      run: |
        echo "🌐 Building Web App para OasisTaxi..."
        flutter build web --release \
          --target lib/main.dart \
          --web-renderer html \
          --base-href "/"

    - name: 📊 Subir build web
      uses: actions/upload-artifact@v4
      with:
        name: web-build
        path: app/build/web/
        retention-days: 30

  # ═══════════════════════════════════════════════════════════════════
  # 📋 JOB 5: DEPLOYMENT (Solo en main)
  # ═══════════════════════════════════════════════════════════════════
  deploy:
    name: 🚀 Deploy
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: [build-android, build-web]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production
    
    steps:
    - name: 📥 Checkout código
      uses: actions/checkout@v4

    - name: 🔧 Setup Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: app/functions/package-lock.json

    - name: 📥 Descargar web build
      uses: actions/download-artifact@v4
      with:
        name: web-build
        path: app/build/web/

    - name: 🔐 Configurar Firebase
      working-directory: app
      env:
        FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
      run: |
        echo "$FIREBASE_SERVICE_ACCOUNT" > firebase-key.json
        export GOOGLE_APPLICATION_CREDENTIALS=firebase-key.json

    - name: 🚀 Deploy a Firebase
      working-directory: app
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      run: |
        npm install -g firebase-tools
        
        echo "🚀 Deploying OasisTaxi a Firebase..."
        firebase deploy --only hosting,firestore,storage --token "$FIREBASE_TOKEN"

  # ═══════════════════════════════════════════════════════════════════
  # 📋 JOB 6: NOTIFICACIONES
  # ═══════════════════════════════════════════════════════════════════
  notify:
    name: 📢 Notificar
    runs-on: ubuntu-latest
    needs: [analyze, test, build-android, build-web, deploy]
    if: always()
    
    steps:
    - name: 📢 Notificación Slack
      if: env.SLACK_WEBHOOK != ''
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      run: |
        STATUS="SUCCESS"
        if [[ "${{ needs.analyze.result }}" != "success" ]] || 
           [[ "${{ needs.test.result }}" != "success" ]] || 
           [[ "${{ needs.build-android.result }}" != "success" ]] || 
           [[ "${{ needs.build-web.result }}" != "success" ]]; then
          STATUS="FAILED"
        fi
        
        curl -X POST -H 'Content-type: application/json' \
          --data "{\"text\":\"🚖 OasisTaxi CI/CD: $STATUS - ${{ github.event.head_commit.message }}\"}" \
          "$SLACK_WEBHOOK"

    - name: 📧 Notificación por email
      if: failure()
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 587
        username: ${{ secrets.EMAIL_USERNAME }}
        password: ${{ secrets.EMAIL_PASSWORD }}
        subject: '🚖 OasisTaxi CI/CD Failed'
        body: |
          El pipeline de CI/CD de OasisTaxi ha fallado.
          
          Commit: ${{ github.sha }}
          Branch: ${{ github.ref }}
          Autor: ${{ github.actor }}
          
          Ver detalles: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        to: dev-team@oasistaxiperu.com
        from: ci-cd@oasistaxiperu.com